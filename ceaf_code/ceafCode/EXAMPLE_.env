# Environment variables
# CEAF Project .env File - Version for E:\ProjetosPython\ceaf_project

# --- Core LLM Provider API Keys ---
# REQUIRED: Replace with your actual OpenRouter API key
OPENROUTER_API_KEY="sk-or-----------"
# OPENROUTER_API_BASE="https://openrouter.ai/api/v1" # Default, usually not needed

# --- Optional: Individual Model Provider API Keys ---
# Only needed if you bypass OpenRouter or use specific models requiring direct keys.
# GOOGLE_API_KEY="YOUR_GOOGLE_AI_STUDIO_API_KEY"
# OPENAI_API_KEY="sk-YOUR_OPENAI_API_KEY"
# ANTHROPIC_API_KEY="sk-ant-YOUR_ANTHROPIC_API_KEY"

# --- CEAF Agent Specific Model Overrides (via OpenRouter) ---
# These define which LLM models each agent uses.
ORA_DEFAULT_MODEL="openrouter/openai/gpt-4.1"
NCIM_DEFAULT_MODEL="openrouter/openai/gpt-4.1"
VRE_DEFAULT_MODEL="openrouter/openai/gpt-4.1" # More capable for VRE
MCL_DEFAULT_MODEL="openrouter/openai/gpt-4.1" # For analysis & structured JSON
KGS_AGENT_MODEL="openrouter/openai/gpt-4.1"    # For KG Synthesis (structured output)
AURA_REFLECTOR_AGENT_MODEL="openrouter/openai/gpt-4.1" # For AuraReflector Agent itself
AURA_INSIGHT_MODEL="openrouter/openai/gpt-4.1"       # For AuraReflector's insight generation
AURA_STRATEGY_MODEL="openrouter/openai/gpt-4.1"          # For AuraReflector's strategy generation
CEAF_DEFAULT_OPENROUTER_MODEL="openrouter/openai/gpt-4.1"    # General fallback if specific not set

# --- Ethical Governor Configuration ---
ETHICAL_GOVERNOR_MODEL="openrouter/openai/gpt-4.1" # Model for VRE's direct ethical LLM calls

# --- MemoryBlossom System (MBS) Configuration ---
# Path for MBS file-based storage. Relative to where main.py is run.
MBS_MEMORY_STORE_PATH="./data/ceaf_mbs_data_v2" # Example: specific path for MBS, versioned to avoid conflicts
MBS_DECAY_INTERVAL_SECONDS="21600"    # 6 hours (for MBS lifecycle tasks in main.py)
MBS_ARCHIVE_INTERVAL_SECONDS="86400"  # 24 hours (for MBS lifecycle tasks in main.py)

# Thresholds for archiving specific memory types (0.0 to 1.0 dynamic salience score)
MBS_EXPLICIT_ARCHIVE_THRESHOLD="0.1"    # Default is 0.1 if not set
MBS_GOAL_ARCHIVE_THRESHOLD="0.05"       # Default is 0.05
MBS_KG_ENTITY_ARCHIVE_THRESHOLD="0.02"  # Default is 0.02
MBS_KG_RELATION_ARCHIVE_THRESHOLD="0.02"# Default is 0.02
MBS_EMOTIONAL_ARCHIVE_THRESHOLD="0.08"  # Default is 0.08
MBS_PROCEDURAL_ARCHIVE_THRESHOLD="0.03" # Default is 0.03
# Comma-separated MemorySourceType string values (e.g., "tool_output", "synthesized_summary")
# These will be deleted instead of archived if below their respective thresholds.
MBS_EPHEMERAL_SOURCES="tool_output" # Example, add others as needed

# Configuration for build_initial_connection_graph
MBS_SEMANTIC_CONNECTION_THRESHOLD="0.78" # Similarity threshold for creating semantic links (0.0-1.0)
MBS_KEYWORD_CONNECTION_THRESHOLD_COUNT="3"  # Minimum number of common keywords to create a link
MBS_MAX_RELATED_IDS="10"                  # Max number of related_memory_ids per memory initially

# --- Persistent Log Service Configuration ---
# Path for the SQLite database used by PersistentLogService. Relative to main.py run location.
CEAF_PERSISTENT_LOG_DB_PATH="./data/ceaf_persistent_logs.sqlite"

# --- Finetuning Data Logger Configuration ---
CEAF_FINETUNING_LOG_ENABLED="true" # Set to "true" to enable logging finetuning data
# Path for the JSONL file where finetuning data is stored. Relative to main.py run location.
CEAF_FINETUNING_LOG_FILE="./data/ceaf_finetuning_log.jsonl"

# --- DatabaseSessionService Configuration (If you switch from InMemorySessionService) ---
# DATABASE_URL="sqlite:///./data/ceaf_adk_sessions.db" # Example for ADK sessions

# --- MCP Toolset Configuration ---
# Filesystem MCP Server
MCP_FS_SERVER_ENABLED="false" # Set to "true" to enable
MCP_FS_SERVER_COMMAND="npx"
# MCP_FS_SERVER_ARGS_JSON defaults to '["-y", "@modelcontextprotocol/server-filesystem"]'
# IMPORTANT: Set to an ABSOLUTE and ACCESSIBLE path if enabled.
# Example for Windows: MCP_FS_SERVER_ROOT_PATH="E:\\Temp\\mcp_fs_share"
# Example for Linux/WSL: MCP_FS_SERVER_ROOT_PATH="/mnt/e/Temp/mcp_fs_share"
MCP_FS_SERVER_ROOT_PATH="" # LEAVE BLANK IF DISABLED or SET VALID ABSOLUTE PATH

# Google Maps MCP Server
MCP_MAPS_SERVER_ENABLED="false" # Set to "true" to enable
MCP_MAPS_SERVER_COMMAND="npx"
# MCP_MAPS_SERVER_ARGS_JSON defaults to '["-y", "@modelcontextprotocol/server-google-maps"]'
# REQUIRED if MCP_MAPS_SERVER_ENABLED is true
GOOGLE_MAPS_API_KEY_FOR_MCP="YOUR_REDACTED_GOOGLE_MAPS_API_KEY"

# --- LiteLLM Debugging (Optional) ---
# LITELLM_DEBUG="1" # Uncomment for verbose logs from LiteLLM

# --- FastAPI Server Settings (main.py defaults to 127.0.0.1:8000) ---
# FASTAPI_HOST="0.0.0.0"
# FASTAPI_PORT="8000"

# --- General Application Logging Level ---
# Options: DEBUG, INFO, WARNING, ERROR, CRITICAL
LOG_LEVEL="INFO"